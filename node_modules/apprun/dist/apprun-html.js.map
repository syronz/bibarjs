{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/app.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom-my.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./node_modules/lit-html/lib/directive.js","webpack://apprun/./node_modules/lit-html/lib/dom.js","webpack://apprun/./node_modules/lit-html/lib/part.js","webpack://apprun/./node_modules/lit-html/lib/template.js","webpack://apprun/./node_modules/lit-html/lib/template-instance.js","webpack://apprun/./node_modules/lit-html/lib/template-result.js","webpack://apprun/./node_modules/lit-html/lib/parts.js","webpack://apprun/./node_modules/lit-html/lib/default-template-processor.js","webpack://apprun/./node_modules/lit-html/lib/template-factory.js","webpack://apprun/./node_modules/lit-html/lib/render.js","webpack://apprun/./node_modules/lit-html/lit-html.js","webpack://apprun/./node_modules/lit-html/directives/unsafe-html.js","webpack://apprun/./src/vdom-lit-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","customElement","componentClass","options","HTMLElement","super","_component","state","isConnected","opts","_shadowRoot","shadow","attachShadow","props","Array","from","attributes","forEach","item","children","el","parentElement","removeChild","mount","mounted","new_state","on","run","render","unload","unmount","args","customElements","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","events","descriptor","toString","defineMetadata","constructor","getStateValue","component","setStateValue","setState","tag","startsWith","event","substring","e","isArray","handler","type","checked","Number","multiple","selected","app","componentCache","components","REFRESH","view","update","_app","_actions","_global_events","_history","_history_idx","_history_prev","history","_history_next","length","start","element","node","h","createElement","directive","html","vdom","_view","document","getElementById","tracking_attr","getAttribute","tracking_id","Date","valueOf","setAttribute","MutationObserver","observer","changes","oldValue","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","removeAttribute","rendered","Promise","then","catch","err","console","error","_state","renderState","enable_history","callback","assert","global_event","prev","next","add_actions","id","push","indexOf","action","global","newState","actions","getMetadataKeys","getMetadata","all","act","split","trim","add_action","is_global_event","fn","off","__isAppRunComponent","ROUTER_EVENT","ROUTER_404_EVENT","route","url","rest","_","parent","Fragment","webComponent","model","NOOP","addEventListener","window","onpopstate","location","hash","App","_events","subscribers","filter","sub","once","delay","apply","_t","clearTimeout","setTimeout","self","_idx","createComponent","idx","map","child","now","__componentCache","ref","ATTR_PROPS","collect","ch","undefined","Error","keyCache","updateElement","nodes","isSvg","nodeName","updateChildren","key1","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","SVGElement","insertBefore","textContent","nodeType","createText","old","appendChild","lastChild","createDocumentFragment","div","insertAdjacentHTML","createTextNode","JSON","stringify","createElementNS","cached","oldProps","newProps","mergeProps","style","cssText","cname","replace","match","dataset","requestAnimationFrame","g","Function","directives","f","isDirective","isCEPolyfill","polyfillWrapFlushCallback","reparentNodes","container","end","before","nextSibling","removeNodes","noChange","nothing","marker","String","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","parts","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","nextNode","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","statics","tagName","currentNode","data","lastIndex","insert","createMarker","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","innerHTML","getHTML","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","iterator","AttributeCommitter","dirty","_createPart","text","v","_getValue","committer","__pendingValue","startNode","endNode","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","passive","shouldAddListener","__options","getOptions","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","join","assign","appendInto","svg","previousValues","unsafeHTML","previousValue","_render","getComponent"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?, shadow?, history?, global_event?: boolean;\n  observedAttributes?: string[]\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    return { ...options }['observedAttributes'];\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const props = {}\n      Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(...args) {\n    this._component?.run('attributeChanged', ...args);\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = { ...component['state'] };\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T=any, E=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state, p = null) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = p ? this.view(state, p) : this.view(state);\r\n    app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    const html = vdom || this._view(state);\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if(!this.observer)  this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom) this.render(el, html);\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E>  {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this. _global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n    component['__eid'] = id;\n  } else {\n    id = component['__eid'];\n  }\n  let state = component.state;\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, state);\n    if (typeof new_state !== 'undefined') state = component.state = new_state;\n  }\n  if (state instanceof Promise) {\n    const render = el => {\n      component.element = el;\n      component.setState(state);\n    }\n    return <section {...props} id={id} ref={e => render(e)}></section>;\n  }\n  else {\n    const vdom = component._view(state, props);\n    const render = el => {\n      component.element = el;\n      component.renderState(state, vdom);\n    }\n    return <section {...props} id={id} ref={e => render(e)}>{vdom}</section>;\n  }\n}\n\nlet _idx = 0;\nexport default function createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent)\n    vdom = render(node, parent, _idx++);\n  if (vdom && Array.isArray(vdom.children))\n    vdom.children = vdom.children.map(child => createComponent(child, parent, _idx));\n  return vdom;\n}\n","import createComponent from './createComponent';\nimport { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  updateChildren(element, node.children, isSvg);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    }\n    else if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child, isSvg);\n          } else {\n            element.insertBefore(create(child, isSvg), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'id' || name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n        element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(()=>props['ref'](element));\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","import { createElement, updateElement, Fragment } from './vdom-my';\nimport { html, render, TemplateResult, svg, directive, EventPart } from 'lit-html';\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nfunction _render(element, vdom, parent?) {\n  if (typeof vdom === 'string') {\n    render(html`${unsafeHTML(vdom)}`, element);\n  } else if (vdom instanceof TemplateResult) {\n    render(vdom, element)\n  } else {\n    updateElement(element, vdom, parent);\n  }\n}\n\nconst run = directive((event, ...args) => (part) => {\n  if (!(part instanceof EventPart)) {\n    throw new Error('${run} can only be used in event handlers');\n  }\n  let { element, eventName } = part;\n  const getComponent = () => {\n    let component = element['_component'];\n    while (!component && element) {\n      element = element.parentElement;\n      component = element && element['_component'];\n    }\n    console.assert(!!component, 'Component not found.');\n    return component;\n  }\n  if (typeof event === 'string') {\n    element[`on${eventName}`] = e => getComponent().run(event, ...args, e);\n  } else if (typeof event === 'function') {\n    element[`on${eventName}`] = e => getComponent().setState(event(getComponent().state, ...args, e));\n  }\n});\n\nexport { createElement, Fragment, html, svg, _render as render , run};\n\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment, html, svg, run } from './vdom-lit-html';\nexport { html, svg, render, run }\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n\nif (typeof window === 'object') {\n  window['html'] = html;\n  window['svg'] = svg;\n  window['run'] = run;\n}\n"],"sourceRoot":""}